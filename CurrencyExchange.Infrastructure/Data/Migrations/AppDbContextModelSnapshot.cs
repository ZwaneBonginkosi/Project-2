// <auto-generated />
using System;
using CurrencyExchange.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CurrencyExchange.Infrastructure.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("CurrencyExchange.ApplicationCore.Entities.ConversionHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RatesHistoryId");

                    b.Property<double>("Amount")
                        .HasPrecision(15)
                        .HasColumnType("double");

                    b.Property<string>("Base")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("Base");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime");

                    b.Property<double>("Rate")
                        .HasColumnType("double");

                    b.Property<string>("Target")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("Target");

                    b.Property<double>("TargetAmount")
                        .HasPrecision(15)
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.ToTable("ConversionHistory", "CurrencyExchange");
                });

            modelBuilder.Entity("CurrencyExchange.ApplicationCore.Entities.CurrencyPairEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CurrencyPairId");

                    b.Property<string>("Base")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("Base");

                    b.Property<double>("Rate")
                        .HasPrecision(15)
                        .HasColumnType("double");

                    b.Property<string>("Target")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("Target");

                    b.HasKey("Id");

                    b.ToTable("CurrencyPair", "CurrencyExchange");
                });
#pragma warning restore 612, 618
        }
    }
}
